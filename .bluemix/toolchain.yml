---
version: '2'
messages:
  $i18n: locales.yml
template:
  name:
    $ref: "#/messages/template.name"
  description:
    $ref: "#/messages/template.description"
  header: '![](toolchain.svg?localize)'
  icon: secure-lock-kubernetes.svg
  required:
    - build
    - repo
    - pipeline-repo
    - tekton-catalog-repo
  info:
    git url: >
      "[" + $env.repository + "]" +
        "(" + $env.repository + ")"
    git branch: >
      "[" + $env.branch + "]" +
        "(" + $env.repository +
          "/tree/" + $env.branch + ")"
toolchain:
  name: 'kube-toolchain-{{timestamp}}'
  template:
    getting_started:
      $ref: "#/messages/template.gettingStarted"
services:
  repo:
    #service_id: >
    #  $env.source_provider ? $env.source_provider : 'hostedgit'
    service_id: githubpublic
    parameters:
      repo_name: 'hello-containers-{{timestamp}}'
      repo_url: >
        $env.type === 'link' ? 
          $env.app_repo : 'https://github.com/open-toolchain/hello-containers'
      source_repo_url: >
        $env.type === 'fork' || $env.type === 'clone' ? 
          $env.app_repo : 'https://github.com/open-toolchain/hello-containers'
      type: $env.type || 'clone'
      has_issues: true
      enable_traceability: true
      legal: true
  pipeline-repo:
    service_id: githubpublic
    parameters:
      repo_name: 'secure-kube-toolchain2-{{timestamp}}'
      repo_url: >
        $env.type === 'link' ?
          $env.app_repo : $env.tekton === 'true' ? 'https://github.com/huayuenh/secure-kube-toolchain-tekton' : ''
      source_repo_url: >
        $env.type === 'fork' || $env.type === 'clone' ?
          $env.app_repo : 'https://github.com/huayuenh/secure-kube-toolchain-tekton'
      type: $env.type || 'link'
      has_issues: false
      enable_traceability: false
      legal: true
  tekton-catalog-repo:
    service_id: githubpublic
    parameters:
      repo_name: 'tekton-catalog-{{timestamp}}'
      repo_url: >
        $env.type === 'link' ?
          $env.app_repo : 'https://github.com/open-toolchain/tekton-catalog'
      source_repo_url: >
        $env.type === 'fork' || $env.type === 'clone' ?
          $env.app_repo : 'https://github.com/open-toolchain/tekton-catalog'
      type: $env.type || 'link'
      has_issues: false
      enable_traceability: false
      legal: true
  tekton-temp-common-repo:
    service_id: githubpublic
    parameters:
      repo_name: 'common-tekton-temp-{{timestamp}}'
      repo_url: >
        $env.type === 'link' ?
          $env.app_repo : 'https://github.com/huayuenh/common-tekton'
      source_repo_url: >
        $env.type === 'fork' || $env.type === 'clone' ?
          $env.app_repo : 'https://github.com/huayuenh/common-tekton'
      type: $env.type || 'link'
      has_issues: false
      enable_traceability: false
      legal: true
  build:
    service_id: pipeline
    parameters:
      services:
        - repo
        - pipeline-repo
        - tekton-catalog-repo
      name: '{{services.repo.parameters.repo_name}}'
      ui-pipeline: true
      type: tekton
      configuration:
        content:
         # $text: pipeline.yml
          $text: pipeline_tekton.yml
        env:
          GIT_REPO: repo
          APP_NAME: '{{form.pipeline.parameters.app-name}}'
          REGISTRY_REGION_ID: '{{form.pipeline.parameters.registry-region}}'
          REGISTRY_NAMESPACE: '{{form.pipeline.parameters.registry-namespace}}'
          API_KEY: '{{form.pipeline.parameters.api-key}}'
          PROD_REGION_ID: '{{form.pipeline.parameters.prod-region}}'
          PROD_RESOURCE_GROUP: '{{form.pipeline.parameters.prod-resource-group}}'
          PROD_CLUSTER_NAME: '{{form.pipeline.parameters.prod-cluster-name}}'
          PROD_CLUSTER_NAMESPACE: '{{form.pipeline.parameters.prod-cluster-namespace}}'
          APP_REPO_FULL: 'https://github.com/{{form.repo.parameters.owner_id}}/{{form.repo.parameters.repo_name}}'
          PIPELINE_REPO: pipeline-repo
          TEKTON_CATALOG_REPO: tekton-catalog-repo
          TEKTON_TEMP_COMMON: tekton-temp-common-repo
          IMAGE_URL: 'us.icr.io/{{form.pipeline.parameters.registry-namespace}}/{{form.pipeline.parameters.app-name}}'
        execute: false
        #execute: true
  webide:
    service_id: orion
form:
  pipeline:
    parameters:
      app-name: '{{services.repo.parameters.repo_name}}'
      #prod-cluster-namespace: prod
      prod-cluster-namespace: default
    schema:
      $ref: deploy.json
